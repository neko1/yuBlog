(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{320:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"git-的常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-的常用命令"}},[t._v("#")]),t._v(" git 的常用命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init                    // 新建 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" 代码库\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("                     // 添加指定文件到暂存区\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v("                      // 删除工作区文件，并且将这次删除放入暂存区\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     // 提交暂存区到仓库区\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch                  // 列出所有分支\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    // 新建一个分支，并切换到该分支\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status                  // 显示有变更文件的状态\n")])])]),s("h2",{attrs:{id:"git-pull-和-git-fetch-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-和-git-fetch-的区别"}},[t._v("#")]),t._v(" git pull 和 git fetch 的区别")]),t._v(" "),s("ul",[s("li",[t._v("git pull 会将远程仓库的分化下载下来，并和当前分支合并。")]),t._v(" "),s("li",[t._v("git fetch 只是将远程仓库的变化下载下来，并没有和本地分支合并。")])]),t._v(" "),s("h2",{attrs:{id:"git-merge-和-git-rebase-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-和-git-rebase-的区别"}},[t._v("#")]),t._v(" git merge 和 git rebase 的区别")]),t._v(" "),s("p",[t._v("git merge 和 git rebase 都是用于分支合并，关键在 commit 记录的处理上不同：")]),t._v(" "),s("ul",[s("li",[t._v("git merge 会新建一个新的 commit 对象，然后两个分支以前的 commit 记录都指向这个新 commit 记录。这种方法会保留之前每个分支的 commit 历史。")]),t._v(" "),s("li",[t._v("git rebase 会先找到两个分支的第一个共同的 commit 祖先记录，然后将提取当前分支这之后的所有 commit 记录，然后将这个 commit 记录添加到目标分支的最新提交后面。经过这个合并后，两个分支合并后的 commit 记录就变为了线性的记录。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);